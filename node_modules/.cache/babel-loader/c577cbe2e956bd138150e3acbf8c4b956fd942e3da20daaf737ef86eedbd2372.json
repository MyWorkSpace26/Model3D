{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Pictures\\\\_REACT\\\\videosurveillance\\\\src\\\\FirstComponent.js\";\n/* import React, { useRef } from \"react\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\r\n\r\nconst Model = () => {\r\n  const gltf = useGLTF(\"/scene.glb\");\r\n  const group = useRef();\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.01;\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      <primitive object={gltf.scene} scale={1.0} />\r\n    </group>\r\n  );\r\n};\r\n\r\nconst FirstComponent = () => {\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Model />\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default FirstComponent; */\n\n/////////////////////////////////\n/* import React from \"react\";\r\n\r\nconst FirstComponent = () => {\r\n  return (\r\n    <div>\r\n      <iframe\r\n        title=\"Sketchfab Embed\"\r\n        width=\"100%\"\r\n        height=\"600px\"\r\n        src=\"https://sketchfab.com/models/1f03b08ab4cc4fd0b2e43ce7661c264c/embed\"\r\n        frameborder=\"0\"\r\n        allow=\"autoplay; fullscreen; vr\"\r\n        mozallowfullscreen=\"true\"\r\n        webkitallowfullscreen=\"true\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent; */\n\n///////////////////////////////////////////////////////////////////////////////////\n/* import React, { useRef } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BoxGeometry } from \"three\";\r\nimport \"../src/App.css\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst FirstComponent = () => {\r\n  const Controls = () => {\r\n    const controls = useRef();\r\n\r\n    const { camera, gl } = useThree();\r\n\r\n    useFrame(() => {\r\n      controls.current.update();\r\n    });\r\n\r\n    return (\r\n      <orbitControls\r\n        ref={controls}\r\n        autoRotate\r\n        args={[camera, gl.domElement]}\r\n      ></orbitControls>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"divcube\">\r\n      <Canvas>\r\n        <mesh>\r\n          <Controls />\r\n\r\n          <primitive\r\n            object={new BoxGeometry(1, 1, 1)} // Используем new для создания экземпляра BoxGeometry\r\n            attach=\"geometry\"\r\n          />\r\n\r\n          <meshBasicMaterial wireframe attach=\"material\" color=\"red\" />\r\n        </mesh>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent;\r\n */\n\nimport React, { Suspense, useRef } from \"react\";\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { useGLTF } from \"@react-three/drei\";\nimport \"../src/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls\n});\nconst FirstComponent = () => {\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const Controls = () => {\n    _s();\n    const controls = useRef();\n    const {\n      camera,\n      gl\n    } = useThree();\n    useFrame(() => {\n      controls.current.update();\n    });\n    return /*#__PURE__*/_jsxDEV(\"orbitControls\", {\n      ref: controls,\n      autoRotate: true,\n      args: [camera, gl.domElement]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Controls, \"gBZ7DcuEYJIOk2FCi9B1xZ5Sv3o=\", false, function () {\n    return [useThree, useFrame];\n  });\n  const Model = () => {\n    _s2();\n    const {\n      nodes\n    } = useGLTF(\"scene.gltf\"); // Путь к вашей модели .gltf или .glb\n\n    return /*#__PURE__*/_jsxDEV(\"group\", {\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        geometry: nodes.Material30.geometry,\n        material: nodes.Material30.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Model, \"5D6rOZ9bvUtw5+qsW9KW4TPIfKU=\", false, function () {\n    return [useGLTF];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divcube\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_c = FirstComponent;\nexport default FirstComponent;\nvar _c;\n$RefreshReg$(_c, \"FirstComponent\");","map":{"version":3,"names":["React","Suspense","useRef","Canvas","extend","useThree","useFrame","OrbitControls","useGLTF","jsxDEV","_jsxDEV","FirstComponent","_s","$RefreshSig$","_s2","Controls","controls","camera","gl","current","update","ref","autoRotate","args","domElement","fileName","_jsxFileName","lineNumber","columnNumber","Model","nodes","children","geometry","Material30","material","className","fallback","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Pictures/_REACT/videosurveillance/src/FirstComponent.js"],"sourcesContent":["/* import React, { useRef } from \"react\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\r\n\r\nconst Model = () => {\r\n  const gltf = useGLTF(\"/scene.glb\");\r\n  const group = useRef();\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.01;\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      <primitive object={gltf.scene} scale={1.0} />\r\n    </group>\r\n  );\r\n};\r\n\r\nconst FirstComponent = () => {\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Model />\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default FirstComponent; */\r\n\r\n/////////////////////////////////\r\n/* import React from \"react\";\r\n\r\nconst FirstComponent = () => {\r\n  return (\r\n    <div>\r\n      <iframe\r\n        title=\"Sketchfab Embed\"\r\n        width=\"100%\"\r\n        height=\"600px\"\r\n        src=\"https://sketchfab.com/models/1f03b08ab4cc4fd0b2e43ce7661c264c/embed\"\r\n        frameborder=\"0\"\r\n        allow=\"autoplay; fullscreen; vr\"\r\n        mozallowfullscreen=\"true\"\r\n        webkitallowfullscreen=\"true\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent; */\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n/* import React, { useRef } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BoxGeometry } from \"three\";\r\nimport \"../src/App.css\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst FirstComponent = () => {\r\n  const Controls = () => {\r\n    const controls = useRef();\r\n\r\n    const { camera, gl } = useThree();\r\n\r\n    useFrame(() => {\r\n      controls.current.update();\r\n    });\r\n\r\n    return (\r\n      <orbitControls\r\n        ref={controls}\r\n        autoRotate\r\n        args={[camera, gl.domElement]}\r\n      ></orbitControls>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"divcube\">\r\n      <Canvas>\r\n        <mesh>\r\n          <Controls />\r\n\r\n          <primitive\r\n            object={new BoxGeometry(1, 1, 1)} // Используем new для создания экземпляра BoxGeometry\r\n            attach=\"geometry\"\r\n          />\r\n\r\n          <meshBasicMaterial wireframe attach=\"material\" color=\"red\" />\r\n        </mesh>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent;\r\n */\r\n\r\nimport React, { Suspense, useRef } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport \"../src/App.css\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst FirstComponent = () => {\r\n  const Controls = () => {\r\n    const controls = useRef();\r\n\r\n    const { camera, gl } = useThree();\r\n\r\n    useFrame(() => {\r\n      controls.current.update();\r\n    });\r\n\r\n    return (\r\n      <orbitControls ref={controls} autoRotate args={[camera, gl.domElement]} />\r\n    );\r\n  };\r\n\r\n  const Model = () => {\r\n    const { nodes } = useGLTF(\"scene.gltf\"); // Путь к вашей модели .gltf или .glb\r\n\r\n    return (\r\n      <group>\r\n        <mesh\r\n          geometry={nodes.Material30.geometry}\r\n          material={nodes.Material30.material}\r\n        />\r\n        {/* Здесь вы можете добавить другие части модели комнат дома */}\r\n      </group>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"divcube\">\r\n      <Canvas>\r\n        <Suspense fallback={null}>\r\n          <Controls />\r\n          <Model />\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}