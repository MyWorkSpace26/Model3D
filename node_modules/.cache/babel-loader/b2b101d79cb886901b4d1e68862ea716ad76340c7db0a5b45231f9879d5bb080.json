{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Pictures\\\\_REACT\\\\videosurveillance\\\\src\\\\FirstComponent.js\",\n  _s = $RefreshSig$();\n/* import React, { useRef } from \"react\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\r\n\r\nconst Model = () => {\r\n  const gltf = useGLTF(\"/scene.glb\");\r\n  const group = useRef();\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.01;\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      <primitive object={gltf.scene} scale={1.0} />\r\n    </group>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Model />\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App; */\n\n/////////////////////////////////\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  const [modelUrl, setModelUrl] = useState(\"\");\n  useEffect(() => {\n    const fetchModel = async () => {\n      try {\n        const response = await fetch(\"https://api.sketchfab.com/v3/models/{8-0-1f03b08ab4cc4fd0b2e43ce7661c264c}\");\n        const modelData = await response.json();\n        const modelUrl = modelData.gltf.url; // Извлекаем URL модели из полученных данных\n        setModelUrl(modelUrl);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке модели:\", error);\n      }\n    };\n    fetchModel();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: modelUrl ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"3D Model\",\n      width: \"100%\",\n      height: \"600px\",\n      src: modelUrl,\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043C\\u043E\\u0434\\u0435\\u043B\\u0438...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"wr838Az0G+mprelcmzhOvpua+qU=\");\n_c = MyComponent;\nexport default MyComponent;\n\n///////////////////////////////////////////////////////////////////////////////////\n/* import React, { useRef } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BoxGeometry } from \"three\";\r\nimport \"../src/App.css\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst FirstComponent = () => {\r\n  const Controls = () => {\r\n    const controls = useRef();\r\n\r\n    const { camera, gl } = useThree();\r\n\r\n    useFrame(() => {\r\n      controls.current.update();\r\n    });\r\n\r\n    return (\r\n      <orbitControls\r\n        ref={controls}\r\n        autoRotate\r\n        args={[camera, gl.domElement]}\r\n      ></orbitControls>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"divcube\">\r\n      <Canvas>\r\n        <mesh>\r\n          <Controls />\r\n\r\n          <primitive\r\n            object={new BoxGeometry(1, 1, 1)} // Используем new для создания экземпляра BoxGeometry\r\n            attach=\"geometry\"\r\n          />\r\n\r\n          <meshBasicMaterial wireframe attach=\"material\" color=\"red\" />\r\n        </mesh>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent; */\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyComponent","_s","modelUrl","setModelUrl","fetchModel","response","fetch","modelData","json","gltf","url","error","console","children","title","width","height","src","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Pictures/_REACT/videosurveillance/src/FirstComponent.js"],"sourcesContent":["/* import React, { useRef } from \"react\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\r\n\r\nconst Model = () => {\r\n  const gltf = useGLTF(\"/scene.glb\");\r\n  const group = useRef();\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.01;\r\n  });\r\n\r\n  return (\r\n    <group ref={group}>\r\n      <primitive object={gltf.scene} scale={1.0} />\r\n    </group>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <Model />\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App; */\r\n\r\n/////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst MyComponent = () => {\r\n  const [modelUrl, setModelUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchModel = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.sketchfab.com/v3/models/{8-0-1f03b08ab4cc4fd0b2e43ce7661c264c}\"\r\n        );\r\n        const modelData = await response.json();\r\n        const modelUrl = modelData.gltf.url; // Извлекаем URL модели из полученных данных\r\n        setModelUrl(modelUrl);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке модели:\", error);\r\n      }\r\n    };\r\n\r\n    fetchModel();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {modelUrl ? (\r\n        <iframe\r\n          title=\"3D Model\"\r\n          width=\"100%\"\r\n          height=\"600px\"\r\n          src={modelUrl}\r\n          allowFullScreen\r\n        />\r\n      ) : (\r\n        <p>Загрузка модели...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n/* import React, { useRef } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BoxGeometry } from \"three\";\r\nimport \"../src/App.css\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst FirstComponent = () => {\r\n  const Controls = () => {\r\n    const controls = useRef();\r\n\r\n    const { camera, gl } = useThree();\r\n\r\n    useFrame(() => {\r\n      controls.current.update();\r\n    });\r\n\r\n    return (\r\n      <orbitControls\r\n        ref={controls}\r\n        autoRotate\r\n        args={[camera, gl.domElement]}\r\n      ></orbitControls>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"divcube\">\r\n      <Canvas>\r\n        <mesh>\r\n          <Controls />\r\n\r\n          <primitive\r\n            object={new BoxGeometry(1, 1, 1)} // Используем new для создания экземпляра BoxGeometry\r\n            attach=\"geometry\"\r\n          />\r\n\r\n          <meshBasicMaterial wireframe attach=\"material\" color=\"red\" />\r\n        </mesh>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstComponent; */\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4EACF,CAAC;QACD,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvC,MAAMN,QAAQ,GAAGK,SAAS,CAACE,IAAI,CAACC,GAAG,CAAC,CAAC;QACrCP,WAAW,CAACD,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAc,QAAA,EACGX,QAAQ,gBACPH,OAAA;MACEe,KAAK,EAAC,UAAU;MAChBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,OAAO;MACdC,GAAG,EAAEf,QAAS;MACdgB,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,gBAEFvB,OAAA;MAAAc,QAAA,EAAG;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnCID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAqCjB,eAAeA,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}